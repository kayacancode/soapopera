{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/client/src/Player.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player(_ref) {\n  _s();\n  let {\n    accessToken,\n    tracks\n  } = _ref;\n  const [play, setPlay] = useState(false);\n  const [trackUris, setTrackUris] = useState([]);\n\n  // const resetUris = () => {\n  //   setTrackUris([])\n  // }\n\n  // resetUris()\n  const addUri = uri => {\n    setTrackUris([...trackUris, uri]);\n  };\n  for (const track of tracks) {\n    console.log(track);\n    // addUri(track[0].track.uri)\n  }\n\n  // console.log.log(trackUris)\n  // useEffect(() => setPlay(true), [trackUris])\n  useEffect(() => setPlay(true), [tracks]);\n  if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play\n    // uris={trackUris ? trackUris : []}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Player, \"IsuLdfcOVWnQhU5b8AVTjoZ3W1M=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useEffect","SpotifyPlayer","jsxDEV","_jsxDEV","Player","_ref","_s","accessToken","tracks","play","setPlay","trackUris","setTrackUris","addUri","uri","track","console","log","token","showSaveIcon","callback","state","isPlaying","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/client/src/Player.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport SpotifyPlayer from \"react-spotify-web-playback\"\n\nexport default function Player({ accessToken, tracks }) {\n  const [play, setPlay] = useState(false)\n  const [trackUris, setTrackUris] = useState([])\n\n\n  // const resetUris = () => {\n  //   setTrackUris([])\n  // }\n\n  // resetUris()\n  const addUri = (uri) => {\n    setTrackUris([...trackUris, uri])\n  }\n\n  for (const track of tracks) {\n    console.log(track)\n    // addUri(track[0].track.uri)\n  }\n\n  // console.log.log(trackUris)\n  // useEffect(() => setPlay(true), [trackUris])\n  useEffect(() => setPlay(true), [tracks])\n\n  if (!accessToken) return null\n  return (\n    <SpotifyPlayer\n      token={accessToken}\n      showSaveIcon\n      callback={state => {\n        if (!state.isPlaying) setPlay(false)\n      }}\n      play={play}\n      // uris={trackUris ? trackUris : []}\n    />\n  )\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACpD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAG9C;EACA;EACA;;EAEA;EACA,MAAMc,MAAM,GAAIC,GAAG,IAAK;IACtBF,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEG,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,KAAK,MAAMC,KAAK,IAAIP,MAAM,EAAE;IAC1BQ,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB;EACF;;EAEA;EACA;EACAf,SAAS,CAAC,MAAMU,OAAO,CAAC,IAAI,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAExC,IAAI,CAACD,WAAW,EAAE,OAAO,IAAI;EAC7B,oBACEJ,OAAA,CAACF,aAAa;IACZiB,KAAK,EAAEX,WAAY;IACnBY,YAAY;IACZC,QAAQ,EAAEC,KAAK,IAAI;MACjB,IAAI,CAACA,KAAK,CAACC,SAAS,EAAEZ,OAAO,CAAC,KAAK,CAAC;IACtC,CAAE;IACFD,IAAI,EAAEA;IACN;EAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEN;AAACpB,EAAA,CAnCuBF,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}