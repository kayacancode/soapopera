{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport Player from \"./Player\";\n// hi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const CLIENT_ID = \"11e1a8a6d9664d7f9eefd2e7de958a15\";\n  const REDIRECT_URI = \"http://localhost:3001\";\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\n  const RESPONSE_TYPE = \"token\";\n  const [token, setToken] = useState(\"\");\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [userTracks, setUserTracks] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  function updateTrack(track) {\n    setPlayingTrack(t);\n  }\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n  useEffect(() => {\n    const getPlaylists = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPlaylists(data.items);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    if (token) {\n      getPlaylists();\n    }\n  }, [token]);\n  const logout = () => {\n    setToken(\"\");\n    window.localStorage.removeItem(\"token\");\n  };\n  const handlePlaylistClick = async playlist => {\n    setSelectedPlaylist(playlist);\n    try {\n      const {\n        data\n      } = await axios.get(`https://api.spotify.com/v1/playlists/${playlist.id}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPlaylistTracks(data.items);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const renderPlaylists = () => {\n    return playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      onClick: () => handlePlaylistClick(playlist),\n      children: [playlist.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"mx-auto rounded-md\",\n        width: 200,\n        src: playlist.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 131\n      }, this), playlist.name]\n    }, playlist.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this));\n  };\n  const renderUserTracks = () => {\n    return userTracks.map(userTracks => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      onClick: () => handlePlaylistClick(userTracks),\n      children: userTracks.name\n    }, userTracks.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this));\n  };\n  const renderusertracks = () => {\n    return userTracks.map(track => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [track.track.name, \" - \", track.track.artists.map(artist => artist.name).join(\", \")]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  //shuffle playlistTracks\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n  const renderPlaylistTracks = () => {\n    let totalDurationInMs = 0;\n    const tracksToRender = [];\n    shuffle(playlistTracks);\n    for (const track of playlistTracks) {\n      const durationInMs = track.track.duration_ms;\n      const durationInMin = durationInMs / 60000;\n      if (totalDurationInMs + durationInMs <= 480000) {\n        tracksToRender.push(track);\n        totalDurationInMs += durationInMs;\n      } else {\n        //do nothing\n      }\n    }\n    return tracksToRender.map(track => {\n      const durationInMs = track.track.duration_ms;\n      const durationInMin = durationInMs / 60000;\n      const durationString = durationInMin.toFixed(2) + ' minutes';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [track.track.name, \" - \", durationString, \" - \", track.track.artists.map(artist => artist.name).join(\", \")]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[#8582d9] bg-black w-full text-center\",\n        children: \"Welcome to Soap Opera! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center  \",\n        children: \"Don't take too long in the shower! With Soap Opera you pick the playlist and we pick the best songs to limit your water waste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), !token ? /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"\",\n        href: `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`,\n        children: \"Login to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }, this), token ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select a Spotify Playlist and then scroll to the buttom of the page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Playlists:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), renderPlaylists(), selectedPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedPlaylist.name, \" Tracks:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), renderPlaylistTracks()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Player, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UYIfm2o1lLdc1lmhZV7Nk1/oXcY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Player","jsxDEV","_jsxDEV","App","_s","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","token","setToken","searchKey","setSearchKey","artists","setArtists","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","playlistTracks","setPlaylistTracks","userTracks","setUserTracks","playingTrack","setPlayingTrack","updateTrack","track","t","hash","window","location","localStorage","getItem","substring","split","find","elem","startsWith","setItem","getPlaylists","data","get","headers","Authorization","items","e","console","error","logout","removeItem","handlePlaylistClick","playlist","id","renderPlaylists","map","className","onClick","children","images","length","width","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","renderUserTracks","renderusertracks","artist","join","shuffle","array","currentIndex","randomIndex","Math","floor","random","renderPlaylistTracks","totalDurationInMs","tracksToRender","durationInMs","duration_ms","durationInMin","push","durationString","toFixed","href","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/src/App.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport Player from \"./Player\";\n// hi\nfunction App() {\n    const CLIENT_ID = \"11e1a8a6d9664d7f9eefd2e7de958a15\"\n    const REDIRECT_URI = \"http://localhost:3001\"\n    const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\"\n    const RESPONSE_TYPE = \"token\"\n\n    const [token, setToken] = useState(\"\")\n    const [searchKey, setSearchKey] = useState(\"\")\n    const [artists, setArtists] = useState([])\n    const [playlists, setPlaylists] = useState([])\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null)\n    const [playlistTracks, setPlaylistTracks] = useState([])\n    const [userTracks, setUserTracks] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n\n    function updateTrack(track) {\n      setPlayingTrack(t)\n    }\n    \n    useEffect(() => {\n        const hash = window.location.hash\n        let token = window.localStorage.getItem(\"token\")\n\n        if (!token && hash) {\n            token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n\n            window.location.hash = \"\"\n            window.localStorage.setItem(\"token\", token)\n        }\n\n        setToken(token)\n\n    }, [])\n\n    useEffect(() => {\n        const getPlaylists = async () => {\n            try {\n                const {data} = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    },\n                })\n\n                setPlaylists(data.items)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n\n        if (token) {\n            getPlaylists()\n        }\n\n    }, [token])\n\n    const logout = () => {\n        setToken(\"\")\n        window.localStorage.removeItem(\"token\")\n    }\n\n    const handlePlaylistClick = async (playlist) => {\n        setSelectedPlaylist(playlist)\n\n        try {\n            const {data} = await axios.get(`https://api.spotify.com/v1/playlists/${playlist.id}/tracks`, {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                },\n            })\n\n            setPlaylistTracks(data.items)\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const renderPlaylists = () => {\n        return playlists.map(playlist => (\n            <div key={playlist.id}  className = \"text-center\" onClick={() => handlePlaylistClick(playlist)}>\n                {playlist.images.length ? <img className=\"mx-auto rounded-md\" width={200} src={playlist.images[0].url} alt=\"\"/> : <div>No Image</div>}\n            {playlist.name}\n        </div>\n    ))\n}\n\nconst renderUserTracks = () => {\n    return userTracks.map(userTracks => (\n        <div className = \"text-center\" key={userTracks.id} onClick={() => handlePlaylistClick(userTracks)}>\n        {userTracks.name}\n    </div>\n))\n}\n\nconst renderusertracks = () => {\n    return userTracks.map(track => {\n        <div key={track.track.id}>\n   {track.track.name} - {track.track.artists.map(artist => artist.name).join(\", \")}\n\n        </div>\n    })\n}\n\n//shuffle playlistTracks\nfunction shuffle(array) {\nlet currentIndex = array.length,  randomIndex;\n// While there remain elements to shuffle.\nwhile (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n    array[randomIndex], array[currentIndex]];\n}\nreturn array;\n}\n\nconst renderPlaylistTracks = () => {\n  let totalDurationInMs = 0;\n  const tracksToRender = [];\n\n  shuffle(playlistTracks);\n\n  for (const track of playlistTracks) {\n    const durationInMs = track.track.duration_ms;\n    const durationInMin = durationInMs / 60000;\n\n    if (totalDurationInMs + durationInMs <= 480000) {\n      tracksToRender.push(track);\n      totalDurationInMs += durationInMs;\n    } else {\n        //do nothing\n    }\n  }\n\n  return tracksToRender.map(track => {\n    const durationInMs = track.track.duration_ms;\n    const durationInMin = durationInMs / 60000;\n    const durationString = durationInMin.toFixed(2) + ' minutes';\n    return (\n      <div key={track.track.id}>\n        {track.track.name} - {durationString} - {track.track.artists.map(artist => artist.name).join(\", \")}\n      </div>\n    );\n  });\n};\n\n\n\nreturn (\n    <div className=\"bg-white\">\n        <header className=\"App-header\">\n            <h1 className=\"text-[#8582d9] bg-black w-full text-center\">Welcome to Soap Opera! </h1>\n            <p className=\"text-center  \" >Don't take too long in the shower! With Soap Opera you pick the playlist and we pick the best songs to limit your water waste</p>\n            {!token ?\n                <a  className = \"\" href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}>Login\n                    to Spotify</a>\n                : <button  className = \"\" onClick={logout}>Logout</button>}\n\n            {token ?\n                <div className=\"text-center\">\n\n                    <h1 >Select a Spotify Playlist and then scroll to the buttom of the page</h1>\n\n                    <h2 >My Playlists:</h2>\n                    {renderPlaylists()}\n\n                    {selectedPlaylist && (\n                        <div>\n                            <h2>{selectedPlaylist.name} Tracks:</h2>\n                            {renderPlaylistTracks()}\n                        </div>\n                    )}\n\n                    <Player token={token}/>\n\n                </div>\n\n                : <h2></h2>\n            }\n\n       \n\n        </header>\n    </div>\n);\n            }\n            export default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}