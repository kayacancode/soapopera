{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/client/src/Player.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Player(_ref) {\n  _s();\n  let {\n    accessToken,\n    tracks\n  } = _ref;\n  const [play, setPlay] = useState(false);\n  const [trackUris, setTrackUris] = useState();\n\n  // console.log(\"playlist track: \" + tracks)\n\n  const resetUris = () => {\n    setTrackUris([]);\n  };\n  resetUris();\n  const addUri = uri => {\n    setTrackUris([...trackUris, uri]);\n  };\n\n  // for (const track of tracks) {\n  //   console.log(track)\n  //   addUri(track[0].track.uri)\n  // }\n\n  // console.log.log(trackUris)\n  // useEffect(() => setPlay(true), [trackUris])\n  useEffect(() => setPlay(true), [tracks]);\n  if (!accessToken) return null;\n  try {\n    return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n      token: accessToken,\n      showSaveIcon: true,\n      callback: state => {\n        if (!state.isPlaying) setPlay(false);\n      },\n      play: play\n      // uris={trackUris ? trackUris : []}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } catch (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\n_s(Player, \"6uixXtIu9qTuPdHaTUhfwLjTspc=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useEffect","SpotifyPlayer","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","_ref","_s","accessToken","tracks","play","setPlay","trackUris","setTrackUris","resetUris","addUri","uri","token","showSaveIcon","callback","state","isPlaying","fileName","_jsxFileName","lineNumber","columnNumber","error","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/client/src/Player.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport SpotifyPlayer from \"react-spotify-web-playback\"\n\nexport default function Player({ accessToken, tracks }) {\n  const [play, setPlay] = useState(false)\n  const [trackUris, setTrackUris] = useState()\n\n\n  // console.log(\"playlist track: \" + tracks)\n\n  const resetUris = () => {\n    setTrackUris([])\n  }\n\n  resetUris()\n  const addUri = (uri) => {\n    setTrackUris([...trackUris, uri])\n  }\n\n  // for (const track of tracks) {\n  //   console.log(track)\n  //   addUri(track[0].track.uri)\n  // }\n\n  // console.log.log(trackUris)\n  // useEffect(() => setPlay(true), [trackUris])\n  useEffect(() => setPlay(true), [tracks])\n\n  if (!accessToken) return null\n  try {\n    return (\n      <SpotifyPlayer\n        token={accessToken}\n        showSaveIcon\n        callback={state => {\n          if (!state.isPlaying) setPlay(false)\n        }}\n        play={play}\n        // uris={trackUris ? trackUris : []}\n      />\n    )\n  } catch (error) {\n    return <></>\n  }\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACpD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,EAAE;;EAG5C;;EAEA,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACtBD,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAEDC,SAAS,EAAE;EACX,MAAMC,MAAM,GAAIC,GAAG,IAAK;IACtBH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEI,GAAG,CAAC,CAAC;EACnC,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACAjB,SAAS,CAAC,MAAMY,OAAO,CAAC,IAAI,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAExC,IAAI,CAACD,WAAW,EAAE,OAAO,IAAI;EAC7B,IAAI;IACF,oBACEN,OAAA,CAACF,aAAa;MACZiB,KAAK,EAAET,WAAY;MACnBU,YAAY;MACZC,QAAQ,EAAEC,KAAK,IAAI;QACjB,IAAI,CAACA,KAAK,CAACC,SAAS,EAAEV,OAAO,CAAC,KAAK,CAAC;MACtC,CAAE;MACFD,IAAI,EAAEA;MACN;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAEN,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,oBAAOxB,OAAA,CAAAE,SAAA,oBAAK;EACd;AACF;AAACG,EAAA,CAzCuBF,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}