{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/src/SpotifyPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyPlayer = _ref => {\n  _s();\n  let {\n    accessToken\n  } = _ref;\n  useEffect(() => {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new Spotify.Player({\n        name: 'Web Playback SDK Quick Start Player',\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        volume: 0.5\n      });\n      player.addListener('ready', _ref2 => {\n        let {\n          device_id\n        } = _ref2;\n        console.log('Ready with Device ID', device_id);\n      });\n      player.addListener('not_ready', _ref3 => {\n        let {\n          device_id\n        } = _ref3;\n        console.log('Device ID has gone offline', device_id);\n      });\n      player.addListener('initialization_error', _ref4 => {\n        let {\n          message\n        } = _ref4;\n        console.error(message);\n      });\n      player.addListener('authentication_error', _ref5 => {\n        let {\n          message\n        } = _ref5;\n        console.error(message);\n      });\n      player.addListener('account_error', _ref6 => {\n        let {\n          message\n        } = _ref6;\n        console.error(message);\n      });\n      player.connect();\n      document.getElementById('togglePlay').onclick = function () {\n        player.togglePlay();\n      };\n    };\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Web Playback SDK Quick Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"togglePlay\",\n      children: \"Toggle Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://sdk.scdn.co/spotify-player.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyPlayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","SpotifyPlayer","_ref","_s","accessToken","window","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","name","getOAuthToken","cb","volume","addListener","_ref2","device_id","console","log","_ref3","_ref4","message","error","_ref5","_ref6","connect","document","getElementById","onclick","togglePlay","children","fileName","_jsxFileName","lineNumber","columnNumber","id","src","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/src/SpotifyPlayer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst SpotifyPlayer = ({ accessToken }) => {\n  useEffect(() => {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new Spotify.Player({\n        name: 'Web Playback SDK Quick Start Player',\n        getOAuthToken: cb => { cb(accessToken); },\n        volume: 0.5\n      });\n\n      player.addListener('ready', ({ device_id }) => {\n        console.log('Ready with Device ID', device_id);\n      });\n\n      player.addListener('not_ready', ({ device_id }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n\n      player.addListener('initialization_error', ({ message }) => {\n          console.error(message);\n      });\n\n      player.addListener('authentication_error', ({ message }) => {\n          console.error(message);\n      });\n\n      player.addListener('account_error', ({ message }) => {\n          console.error(message);\n      });\n\n      player.connect();\n\n      document.getElementById('togglePlay').onclick = function() {\n        player.togglePlay();\n      };\n    }\n  }, [accessToken]);\n\n  return (\n    <div>\n      <h1>Spotify Web Playback SDK Quick Start</h1>\n      <button id=\"togglePlay\">Toggle Play</button>\n      <script src=\"https://sdk.scdn.co/spotify-player.js\"></script>\n    </div>\n  );\n};\n\nexport default SpotifyPlayer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,aAAa,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACpCJ,SAAS,CAAC,MAAM;IACdO,MAAM,CAACC,4BAA4B,GAAG,MAAM;MAC1C,MAAMC,MAAM,GAAG,IAAIC,OAAO,CAACC,MAAM,CAAC;QAChCC,IAAI,EAAE,qCAAqC;QAC3CC,aAAa,EAAEC,EAAE,IAAI;UAAEA,EAAE,CAACR,WAAW,CAAC;QAAE,CAAC;QACzCS,MAAM,EAAE;MACV,CAAC,CAAC;MAEFN,MAAM,CAACO,WAAW,CAAC,OAAO,EAAEC,KAAA,IAAmB;QAAA,IAAlB;UAAEC;QAAU,CAAC,GAAAD,KAAA;QACxCE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,SAAS,CAAC;MAChD,CAAC,CAAC;MAEFT,MAAM,CAACO,WAAW,CAAC,WAAW,EAAEK,KAAA,IAAmB;QAAA,IAAlB;UAAEH;QAAU,CAAC,GAAAG,KAAA;QAC5CF,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,SAAS,CAAC;MACtD,CAAC,CAAC;MAEFT,MAAM,CAACO,WAAW,CAAC,sBAAsB,EAAEM,KAAA,IAAiB;QAAA,IAAhB;UAAEC;QAAQ,CAAC,GAAAD,KAAA;QACnDH,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MAC1B,CAAC,CAAC;MAEFd,MAAM,CAACO,WAAW,CAAC,sBAAsB,EAAES,KAAA,IAAiB;QAAA,IAAhB;UAAEF;QAAQ,CAAC,GAAAE,KAAA;QACnDN,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MAC1B,CAAC,CAAC;MAEFd,MAAM,CAACO,WAAW,CAAC,eAAe,EAAEU,KAAA,IAAiB;QAAA,IAAhB;UAAEH;QAAQ,CAAC,GAAAG,KAAA;QAC5CP,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MAC1B,CAAC,CAAC;MAEFd,MAAM,CAACkB,OAAO,EAAE;MAEhBC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,OAAO,GAAG,YAAW;QACzDrB,MAAM,CAACsB,UAAU,EAAE;MACrB,CAAC;IACH,CAAC;EACH,CAAC,EAAE,CAACzB,WAAW,CAAC,CAAC;EAEjB,oBACEJ,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC7ClC,OAAA;MAAQmC,EAAE,EAAC,YAAY;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC5ClC,OAAA;MAAQoC,GAAG,EAAC;IAAuC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzD;AAEV,CAAC;AAAC/B,EAAA,CA5CIF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}