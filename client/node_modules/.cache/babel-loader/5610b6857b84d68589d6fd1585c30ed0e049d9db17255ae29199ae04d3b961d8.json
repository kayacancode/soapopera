{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/client/src/Playlist.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Playlist() {\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const renderPlaylists = _ref => {\n    let {\n      accessToken\n    } = _ref;\n    return playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-item-container\",\n      onClick: () => handlePlaylistClick(playlist),\n      children: [playlist.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"playlist-image rounded-md\",\n        width: 200,\n        src: playlist.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"playlist-name\",\n        children: playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, playlist.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this));\n  };\n  const renderUserTracks = () => {\n    return userTracks.map(userTracks => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      onClick: () => handlePlaylistClick(userTracks),\n      children: userTracks.name\n    }, userTracks.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this));\n  };\n  const renderusertracks = () => {\n    return userTracks.map(track => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [track.track.name, \" - \", track.track.artists.map(artist => artist.name).join(\", \")]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  //shuffle playlistTracks\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n\n  // const initializeSpotifyPlayer = () => {\n  //     if (window.Spotify) {\n  //       const player = new window.Spotify.Player({\n  //         name: \"Soap Opera\",\n  //         getOAuthToken: (cb) => {\n  //           cb(token);\n  //         },\n  //       });\n\n  //       player.connect();\n\n  //       player.addListener(\"ready\", ({ device_id }) => {\n  //         console.log(\"Ready with Device ID\", device_id);\n  //         setSpotifyPlayer(player);\n  //       });\n\n  //       player.addListener(\"not_ready\", ({ device_id }) => {\n  //         console.log(\"Device ID has gone offline\", device_id);\n  //       });\n  //     }\n  //   };\n\n  const renderPlaylistTracks = () => {\n    let totalDurationInMs = 0;\n    const tracksToRender = [];\n    shuffle(playlistTracks);\n    for (const track of playlistTracks) {\n      const durationInMs = track.track.duration_ms;\n      const durationInMin = durationInMs / 60000;\n      if (totalDurationInMs + durationInMs <= 480000) {\n        tracksToRender.push(track);\n        totalDurationInMs += durationInMs;\n      } else {\n        //do nothing\n      }\n    }\n    return tracksToRender.map(track => {\n      const durationInMs = track.track.duration_ms;\n      const durationInMin = durationInMs / 60000;\n      const durationString = durationInMin.toFixed(2) + ' minutes';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [track.track.name, \" - \", durationString, \" - \", track.track.artists.map(artist => artist.name).join(\", \")]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  //Shows playlists and waits for user to click on one\n  const SelectPlaylist = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select a Spotify Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Playlists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlists-grid\",\n        children: renderPlaylists()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), selectedPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedPlaylist.name, \" Tracks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed inset-0 flex items-center justify-center z-50\",\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-md max-h-full overflow-y-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeModal,\n              className: \"float-right\",\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl mb-4\",\n              children: [selectedPlaylist && selectedPlaylist.name, \" Tracks:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderPlaylistTracks()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  };\n  return accessToken ? SelectPlaylist() : /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 42\n  }, this);\n}\n_c = Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Playlist","closeModal","setIsModalOpen","renderPlaylists","_ref","accessToken","playlists","map","playlist","className","onClick","handlePlaylistClick","children","images","length","width","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","id","renderUserTracks","userTracks","renderusertracks","track","artists","artist","join","shuffle","array","currentIndex","randomIndex","Math","floor","random","renderPlaylistTracks","totalDurationInMs","tracksToRender","playlistTracks","durationInMs","duration_ms","durationInMin","push","durationString","toFixed","SelectPlaylist","selectedPlaylist","isModalOpen","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/client/src/Playlist.js"],"sourcesContent":["import React from 'react'\n\nexport default function Playlist() {\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n      }\n  \n    const renderPlaylists = ({accessToken}) => {\n    return playlists.map((playlist) => (\n        <div\n        key={playlist.id}\n        className=\"playlist-item-container\"\n        onClick={() => handlePlaylistClick(playlist)}\n        >\n        {playlist.images.length ? (\n            <img\n            className=\"playlist-image rounded-md\"\n            width={200}\n            src={playlist.images[0].url}\n            alt=\"\"\n            />\n        ) : (\n            <div>No Image</div>\n        )}\n        <span className=\"playlist-name\">{playlist.name}</span>\n        </div>\n    ));\n    };\n\n    const renderUserTracks = () => {\n        return userTracks.map(userTracks => (\n            <div className = \"\" key={userTracks.id} onClick={() => handlePlaylistClick(userTracks)}>\n            {userTracks.name}\n        </div>\n    ))\n    }\n\n    const renderusertracks = () => {\n        return userTracks.map(track => {\n            <div key={track.track.id}>\n    {track.track.name} - {track.track.artists.map(artist => artist.name).join(\", \")}\n\n            </div>\n        })\n    }\n\n    //shuffle playlistTracks\n    function shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n    }\n\n\n// const initializeSpotifyPlayer = () => {\n//     if (window.Spotify) {\n//       const player = new window.Spotify.Player({\n//         name: \"Soap Opera\",\n//         getOAuthToken: (cb) => {\n//           cb(token);\n//         },\n//       });\n\n//       player.connect();\n\n//       player.addListener(\"ready\", ({ device_id }) => {\n//         console.log(\"Ready with Device ID\", device_id);\n//         setSpotifyPlayer(player);\n//       });\n\n//       player.addListener(\"not_ready\", ({ device_id }) => {\n//         console.log(\"Device ID has gone offline\", device_id);\n//       });\n//     }\n//   };\n\nconst renderPlaylistTracks = () => {\nlet totalDurationInMs = 0;\nconst tracksToRender = [];\n\nshuffle(playlistTracks);\n\nfor (const track of playlistTracks) {\n    const durationInMs = track.track.duration_ms;\n    const durationInMin = durationInMs / 60000;\n\n    if (totalDurationInMs + durationInMs <= 480000) {\n    tracksToRender.push(track);\n    totalDurationInMs += durationInMs;\n    } else {\n        //do nothing\n    }\n    }\n\n    return tracksToRender.map(track => {\n        const durationInMs = track.track.duration_ms;\n        const durationInMin = durationInMs / 60000;\n        const durationString = durationInMin.toFixed(2) + ' minutes';\n        return (\n        <div key={track.track.id}>\n            {track.track.name} - {durationString} - {track.track.artists.map(artist => artist.name).join(\", \")}\n        </div>\n        );\n        });\n    };\n    //Shows playlists and waits for user to click on one\n    const SelectPlaylist = () => {\n        return (\n            <div className=\"text-center\">\n                <h1>Select a Spotify Playlist</h1>\n                <h2>My Playlists:</h2>\n                <div className=\"playlists-grid\">{renderPlaylists()}</div>\n                {selectedPlaylist && (\n                <div>\n                    <h2>{selectedPlaylist.name} Tracks:</h2>\n                    {isModalOpen && (\n                    <div\n                        className=\"fixed inset-0 flex items-center justify-center z-50\"\n                        style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}>\n                        <div className=\"bg-white p-6 rounded-md max-h-full overflow-y-auto\">\n                            <button \n                                onClick={closeModal} \n                                className=\"float-right\">X</button>\n                            <h2 className=\"text-xl mb-4\">{selectedPlaylist && selectedPlaylist.name} Tracks:</h2>\n                        <div>{renderPlaylistTracks()}</div>\n                        </div>\n                    </div>)}\n                </div>)}\n            </div>)\n    }\n    return (\n        accessToken ? SelectPlaylist() : <h2></h2>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}