{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport SpotifyPlayer from \"./Player\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\n// hi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const CLIENT_ID = \"11e1a8a6d9664d7f9eefd2e7de958a15\";\n  const REDIRECT_URI = \"http://localhost:3000\";\n  // const REDIRECT_URI = \"https://soapopera.herokuapp.com/\"\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize?client_id=11e1a8a6d9664d7f9eefd2e7de958a15&redirect_uri=http://localhost:3001&scope=user-read-email%20user-read-private%20streaming&response_type=token\";\n  const RESPONSE_TYPE = \"token\";\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [userTracks, setUserTracks] = useState([]);\n  // const spotifyPlayer = window.spotifyPlayer;\n  // const [spotifyPlayer, setSpotifyPlayer] = useState(null);\n\n  const code = new URLSearchParams(window.location.search).get(\"code\");\n  useEffect(() => {\n    const getPlaylists = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPlaylists(data.items);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    if (token) {\n      getPlaylists();\n    }\n  }, [token]);\n  const logout = () => {\n    setToken(\"\");\n    window.localStorage.removeItem(\"token\");\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const handlePlaylistClick = async playlist => {\n    setSelectedPlaylist(playlist);\n    try {\n      const {\n        data\n      } = await axios.get(`https://api.spotify.com/v1/playlists/${playlist.id}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPlaylistTracks(data.items);\n      openModal();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const renderPlaylists = () => {\n    return playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-item-container\",\n      onClick: () => handlePlaylistClick(playlist),\n      children: [playlist.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"playlist-image rounded-md\",\n        width: 200,\n        src: playlist.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"playlist-name\",\n        children: playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, playlist.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this));\n  };\n  const renderUserTracks = () => {\n    return userTracks.map(userTracks => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      onClick: () => handlePlaylistClick(userTracks),\n      children: userTracks.name\n    }, userTracks.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this));\n  };\n  const renderusertracks = () => {\n    return userTracks.map(track => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [track.track.name, \" - \", track.track.artists.map(artist => artist.name).join(\", \")]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  //shuffle playlistTracks\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n\n  // const initializeSpotifyPlayer = () => {\n  //     if (window.Spotify) {\n  //       const player = new window.Spotify.Player({\n  //         name: \"Soap Opera\",\n  //         getOAuthToken: (cb) => {\n  //           cb(token);\n  //         },\n  //       });\n\n  //       player.connect();\n\n  //       player.addListener(\"ready\", ({ device_id }) => {\n  //         console.log(\"Ready with Device ID\", device_id);\n  //         setSpotifyPlayer(player);\n  //       });\n\n  //       player.addListener(\"not_ready\", ({ device_id }) => {\n  //         console.log(\"Device ID has gone offline\", device_id);\n  //       });\n  //     }\n  //   };\n\n  console.log(code);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"App-header\",\n      children: code ? /*#__PURE__*/_jsxDEV(Dashboard, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nl154wZZo4JuP0/TajjnpbHJPXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","SpotifyPlayer","Login","Dashboard","jsxDEV","_jsxDEV","App","_s","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","isModalOpen","setIsModalOpen","token","setToken","searchKey","setSearchKey","artists","setArtists","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","playlistTracks","setPlaylistTracks","userTracks","setUserTracks","code","URLSearchParams","window","location","search","get","getPlaylists","data","headers","Authorization","items","e","console","error","logout","localStorage","removeItem","openModal","handlePlaylistClick","playlist","id","closeModal","renderPlaylists","map","className","onClick","children","images","length","width","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","renderUserTracks","renderusertracks","track","artist","join","shuffle","array","currentIndex","randomIndex","Math","floor","random","log","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/client/src/App.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport SpotifyPlayer from \"./Player\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\n// hi\nfunction App() {\n    const CLIENT_ID = \"11e1a8a6d9664d7f9eefd2e7de958a15\"\n    const REDIRECT_URI = \"http://localhost:3000\"\n    // const REDIRECT_URI = \"https://soapopera.herokuapp.com/\"\n    const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize?client_id=11e1a8a6d9664d7f9eefd2e7de958a15&redirect_uri=http://localhost:3001&scope=user-read-email%20user-read-private%20streaming&response_type=token\"\n    const RESPONSE_TYPE = \"token\"\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [token, setToken] = useState(\"\")\n    const [searchKey, setSearchKey] = useState(\"\")\n    const [artists, setArtists] = useState([])\n    const [playlists, setPlaylists] = useState([])\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null)\n    const [playlistTracks, setPlaylistTracks] = useState([])\n    const [userTracks, setUserTracks] = useState([])\n    // const spotifyPlayer = window.spotifyPlayer;\n    // const [spotifyPlayer, setSpotifyPlayer] = useState(null);\n\n    const code = new URLSearchParams(window.location.search).get(\"code\")\n\n\n\n    useEffect(() => {\n        const getPlaylists = async () => {\n            try {\n                const {data} = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    },\n                })\n                setPlaylists(data.items)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n\n        if (token) {\n            getPlaylists();\n        }\n        }, [token]\n    )\n\n    const logout = () => {\n        setToken(\"\")\n        window.localStorage.removeItem(\"token\")\n    }\n\n    const openModal = () => {\n      setIsModalOpen(true);\n    }\n\n    const handlePlaylistClick = async (playlist) => {\n        setSelectedPlaylist(playlist)\n        try {\n            const {data} = \n                await axios.get(`https://api.spotify.com/v1/playlists/${playlist.id}/tracks`, {\n                headers: {Authorization: `Bearer ${token}`},})\n            setPlaylistTracks(data.items)\n            openModal()\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const closeModal = () => {\n      setIsModalOpen(false);\n    }\n\n    const renderPlaylists = () => {\n      return playlists.map((playlist) => (\n        <div\n          key={playlist.id}\n          className=\"playlist-item-container\"\n          onClick={() => handlePlaylistClick(playlist)}\n        >\n          {playlist.images.length ? (\n            <img\n              className=\"playlist-image rounded-md\"\n              width={200}\n              src={playlist.images[0].url}\n              alt=\"\"\n            />\n          ) : (\n            <div>No Image</div>\n          )}\n          <span className=\"playlist-name\">{playlist.name}</span>\n        </div>\n      ));\n    };\n\n    const renderUserTracks = () => {\n        return userTracks.map(userTracks => (\n            <div className = \"\" key={userTracks.id} onClick={() => handlePlaylistClick(userTracks)}>\n            {userTracks.name}\n        </div>\n    ))\n    }\n\n    const renderusertracks = () => {\n        return userTracks.map(track => {\n            <div key={track.track.id}>\n    {track.track.name} - {track.track.artists.map(artist => artist.name).join(\", \")}\n\n            </div>\n        })\n    }\n\n    //shuffle playlistTracks\n    function shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n    }\n\n\n// const initializeSpotifyPlayer = () => {\n//     if (window.Spotify) {\n//       const player = new window.Spotify.Player({\n//         name: \"Soap Opera\",\n//         getOAuthToken: (cb) => {\n//           cb(token);\n//         },\n//       });\n  \n//       player.connect();\n  \n//       player.addListener(\"ready\", ({ device_id }) => {\n//         console.log(\"Ready with Device ID\", device_id);\n//         setSpotifyPlayer(player);\n//       });\n  \n//       player.addListener(\"not_ready\", ({ device_id }) => {\n//         console.log(\"Device ID has gone offline\", device_id);\n//       });\n//     }\n//   };\n\n\n\n    console.log(code)\nreturn (\n    <div className=\"bg-white\">\n        <body className=\"App-header\">\n            {code ? <Dashboard code={code}/> : <Login/>}\n            {/* {token ? SelectPlaylist() : <h2></h2>} */}\n        </body>\n\n\n    </div>\n);\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}