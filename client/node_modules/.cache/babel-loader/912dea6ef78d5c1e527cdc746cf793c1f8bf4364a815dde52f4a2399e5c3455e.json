{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport SpotifyPlayer from \"./SpotifyPlayer\";\nimport Login from \"./Login\";\n// hi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const CLIENT_ID = \"11e1a8a6d9664d7f9eefd2e7de958a15\";\n  const REDIRECT_URI = \"http://localhost:3001\";\n  // const REDIRECT_URI = \"https://soapopera.herokuapp.com/\"\n  const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize?client_id=11e1a8a6d9664d7f9eefd2e7de958a15&redirect_uri=http://localhost:3001&scope=user-read-email%20user-read-private%20streaming&response_type=token\";\n  const RESPONSE_TYPE = \"token\";\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [userTracks, setUserTracks] = useState([]);\n  // const spotifyPlayer = window.spotifyPlayer;\n  // const [spotifyPlayer, setSpotifyPlayer] = useState(null);\n\n  const code = new URLSearchParams(window.location.search).get(\"code\");\n\n  // use code to get access token\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n    setToken(token);\n  }, []);\n  useEffect(() => {\n    const getPlaylists = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPlaylists(data.items);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    if (token) {\n      getPlaylists();\n    }\n  }, [token]);\n  const logout = () => {\n    setToken(\"\");\n    window.localStorage.removeItem(\"token\");\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const handlePlaylistClick = async playlist => {\n    setSelectedPlaylist(playlist);\n    try {\n      const {\n        data\n      } = await axios.get(`https://api.spotify.com/v1/playlists/${playlist.id}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPlaylistTracks(data.items);\n      openModal();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const renderPlaylists = () => {\n    return playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-item-container\",\n      onClick: () => handlePlaylistClick(playlist),\n      children: [playlist.images.length ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"playlist-image rounded-md\",\n        width: 200,\n        src: playlist.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"playlist-name\",\n        children: playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, playlist.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this));\n  };\n  const renderUserTracks = () => {\n    return userTracks.map(userTracks => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      onClick: () => handlePlaylistClick(userTracks),\n      children: userTracks.name\n    }, userTracks.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this));\n  };\n  const renderusertracks = () => {\n    return userTracks.map(track => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [track.track.name, \" - \", track.track.artists.map(artist => artist.name).join(\", \")]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  //shuffle playlistTracks\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n\n  // const initializeSpotifyPlayer = () => {\n  //     if (window.Spotify) {\n  //       const player = new window.Spotify.Player({\n  //         name: \"Soap Opera\",\n  //         getOAuthToken: (cb) => {\n  //           cb(token);\n  //         },\n  //       });\n\n  //       player.connect();\n\n  //       player.addListener(\"ready\", ({ device_id }) => {\n  //         console.log(\"Ready with Device ID\", device_id);\n  //         setSpotifyPlayer(player);\n  //       });\n\n  //       player.addListener(\"not_ready\", ({ device_id }) => {\n  //         console.log(\"Device ID has gone offline\", device_id);\n  //       });\n  //     }\n  //   };\n\n  const renderPlaylistTracks = () => {\n    let totalDurationInMs = 0;\n    const tracksToRender = [];\n    shuffle(playlistTracks);\n    for (const track of playlistTracks) {\n      const durationInMs = track.track.duration_ms;\n      const durationInMin = durationInMs / 60000;\n      if (totalDurationInMs + durationInMs <= 480000) {\n        tracksToRender.push(track);\n        totalDurationInMs += durationInMs;\n      } else {\n        //do nothing\n      }\n    }\n    return tracksToRender.map(track => {\n      const durationInMs = track.track.duration_ms;\n      const durationInMin = durationInMs / 60000;\n      const durationString = durationInMin.toFixed(2) + ' minutes';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [track.track.name, \" - \", durationString, \" - \", track.track.artists.map(artist => artist.name).join(\", \")]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n      // <div key={track.track.id} onClick={() => {\n      //     if (spotifyPlayer) {\n      //         spotifyPlayer._options.getOAuthToken((accessToken) => {\n      //         axios\n      //             .put(\n      //             `https://api.spotify.com/v1/me/player/play?device_id=${spotifyPlayer._options.id}`,\n      //             { uris: [track.track.uri] },\n      //             {\n      //                 headers: {\n      //                 Authorization: `Bearer ${accessToken}`,\n      //                 },\n      //             }\n      //             )\n      //             .catch((error) => console.error(error));\n      //         });\n      //         }\n      //     }}\n      //     >\n      //       {track.track.name} - {durationString} -{\" \"}\n      //       {track.track.artists.map((artist) => artist.name).join(\", \")}\n      //     </div>\n      ;\n    });\n  };\n\n  //displays home screen welcome message\n  const WelcomeMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[#8582d9]  w-full text-center\",\n        children: \"Welcome to Soap Opera! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center  \",\n        children: \"Don't take too long in the shower! With Soap Opera you pick the playlist and we pick the best songs to limit your water waste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"text-center\",\n        href: `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`,\n        children: \"Login to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this);\n  };\n\n  // displays logout button if logged in\n  const LoggedIn = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[#8582d9]  text-center\",\n        children: \"Soap Opera \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this);\n  };\n\n  //Shows playlists and waits for user to click on one\n  const SelectPlaylist = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select a Spotify Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Playlists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlists-grid\",\n        children: renderPlaylists()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), selectedPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedPlaylist.name, \" Tracks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed inset-0 flex items-center justify-center z-50\",\n          style: {\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-md max-h-full overflow-y-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeModal,\n              className: \"float-right\",\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl mb-4\",\n              children: [selectedPlaylist && selectedPlaylist.name, \" Tracks:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderPlaylistTracks()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this);\n  };\n  console.log(code);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"App-header\",\n      children: [!token ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }, this) : LoggedIn(), token ? SelectPlaylist() : /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n      accessToken: token,\n      trackUri: \"7ixxyJJJKZdo8bsdWwkaB6?si=3ad2af5705394355\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QcWuB0bzuojUPYcw5LDJqfvmb5s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","SpotifyPlayer","Login","jsxDEV","_jsxDEV","App","_s","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","isModalOpen","setIsModalOpen","token","setToken","searchKey","setSearchKey","artists","setArtists","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","playlistTracks","setPlaylistTracks","userTracks","setUserTracks","code","URLSearchParams","window","location","search","get","hash","localStorage","getItem","substring","split","find","elem","startsWith","setItem","getPlaylists","data","headers","Authorization","items","e","console","error","logout","removeItem","openModal","handlePlaylistClick","playlist","id","closeModal","renderPlaylists","map","className","onClick","children","images","length","width","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","renderUserTracks","renderusertracks","track","artist","join","shuffle","array","currentIndex","randomIndex","Math","floor","random","renderPlaylistTracks","totalDurationInMs","tracksToRender","durationInMs","duration_ms","durationInMin","push","durationString","toFixed","WelcomeMessage","href","LoggedIn","SelectPlaylist","style","backgroundColor","log","accessToken","trackUri","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/src/App.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport SpotifyPlayer from \"./SpotifyPlayer\";\nimport Login from \"./Login\";\n// hi\nfunction App() {\n    const CLIENT_ID = \"11e1a8a6d9664d7f9eefd2e7de958a15\"\n    const REDIRECT_URI = \"http://localhost:3001\"\n    // const REDIRECT_URI = \"https://soapopera.herokuapp.com/\"\n    const AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize?client_id=11e1a8a6d9664d7f9eefd2e7de958a15&redirect_uri=http://localhost:3001&scope=user-read-email%20user-read-private%20streaming&response_type=token\"\n    const RESPONSE_TYPE = \"token\"\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [token, setToken] = useState(\"\")\n    const [searchKey, setSearchKey] = useState(\"\")\n    const [artists, setArtists] = useState([])\n    const [playlists, setPlaylists] = useState([])\n    const [selectedPlaylist, setSelectedPlaylist] = useState(null)\n    const [playlistTracks, setPlaylistTracks] = useState([])\n    const [userTracks, setUserTracks] = useState([])\n    // const spotifyPlayer = window.spotifyPlayer;\n    // const [spotifyPlayer, setSpotifyPlayer] = useState(null);\n\n    const code = new URLSearchParams(window.location.search).get(\"code\")\n\n    // use code to get access token\n    useEffect(() => {\n        const hash = window.location.hash\n        let token = window.localStorage.getItem(\"token\")\n        if (!token && hash) {\n            token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\n            window.location.hash = \"\"\n            window.localStorage.setItem(\"token\", token)\n        }\n        setToken(token)\n        }, []\n    )\n\n    useEffect(() => {\n        const getPlaylists = async () => {\n            try {\n                const {data} = await axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    },\n                })\n                setPlaylists(data.items)\n            } catch (e) {\n                console.error(e)\n            }\n        }\n\n        if (token) {\n            getPlaylists();\n        }\n        }, [token]\n    )\n\n    const logout = () => {\n        setToken(\"\")\n        window.localStorage.removeItem(\"token\")\n    }\n\n    const openModal = () => {\n      setIsModalOpen(true);\n    }\n\n    const handlePlaylistClick = async (playlist) => {\n        setSelectedPlaylist(playlist)\n        try {\n            const {data} = \n                await axios.get(`https://api.spotify.com/v1/playlists/${playlist.id}/tracks`, {\n                headers: {Authorization: `Bearer ${token}`},})\n            setPlaylistTracks(data.items)\n            openModal()\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const closeModal = () => {\n      setIsModalOpen(false);\n    }\n\n    const renderPlaylists = () => {\n      return playlists.map((playlist) => (\n        <div\n          key={playlist.id}\n          className=\"playlist-item-container\"\n          onClick={() => handlePlaylistClick(playlist)}\n        >\n          {playlist.images.length ? (\n            <img\n              className=\"playlist-image rounded-md\"\n              width={200}\n              src={playlist.images[0].url}\n              alt=\"\"\n            />\n          ) : (\n            <div>No Image</div>\n          )}\n          <span className=\"playlist-name\">{playlist.name}</span>\n        </div>\n      ));\n    };\n\n    const renderUserTracks = () => {\n        return userTracks.map(userTracks => (\n            <div className = \"\" key={userTracks.id} onClick={() => handlePlaylistClick(userTracks)}>\n            {userTracks.name}\n        </div>\n    ))\n    }\n\n    const renderusertracks = () => {\n        return userTracks.map(track => {\n            <div key={track.track.id}>\n    {track.track.name} - {track.track.artists.map(artist => artist.name).join(\", \")}\n\n            </div>\n        })\n    }\n\n    //shuffle playlistTracks\n    function shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n    }\n\n\n// const initializeSpotifyPlayer = () => {\n//     if (window.Spotify) {\n//       const player = new window.Spotify.Player({\n//         name: \"Soap Opera\",\n//         getOAuthToken: (cb) => {\n//           cb(token);\n//         },\n//       });\n  \n//       player.connect();\n  \n//       player.addListener(\"ready\", ({ device_id }) => {\n//         console.log(\"Ready with Device ID\", device_id);\n//         setSpotifyPlayer(player);\n//       });\n  \n//       player.addListener(\"not_ready\", ({ device_id }) => {\n//         console.log(\"Device ID has gone offline\", device_id);\n//       });\n//     }\n//   };\n\nconst renderPlaylistTracks = () => {\n  let totalDurationInMs = 0;\n  const tracksToRender = [];\n\n  shuffle(playlistTracks);\n\n  for (const track of playlistTracks) {\n    const durationInMs = track.track.duration_ms;\n    const durationInMin = durationInMs / 60000;\n\n    if (totalDurationInMs + durationInMs <= 480000) {\n      tracksToRender.push(track);\n      totalDurationInMs += durationInMs;\n    } else {\n        //do nothing\n    }\n    }\n\n    return tracksToRender.map(track => {\n        const durationInMs = track.track.duration_ms;\n        const durationInMin = durationInMs / 60000;\n        const durationString = durationInMin.toFixed(2) + ' minutes';\n        return (\n        <div key={track.track.id}>\n            {track.track.name} - {durationString} - {track.track.artists.map(artist => artist.name).join(\", \")}\n        </div>\n        // <div key={track.track.id} onClick={() => {\n        //     if (spotifyPlayer) {\n        //         spotifyPlayer._options.getOAuthToken((accessToken) => {\n        //         axios\n        //             .put(\n        //             `https://api.spotify.com/v1/me/player/play?device_id=${spotifyPlayer._options.id}`,\n        //             { uris: [track.track.uri] },\n        //             {\n        //                 headers: {\n        //                 Authorization: `Bearer ${accessToken}`,\n        //                 },\n        //             }\n        //             )\n        //             .catch((error) => console.error(error));\n        //         });\n        //         }\n        //     }}\n        //     >\n        //       {track.track.name} - {durationString} -{\" \"}\n        //       {track.track.artists.map((artist) => artist.name).join(\", \")}\n        //     </div>\n        );\n        });\n    };\n\n    //displays home screen welcome message\n    const WelcomeMessage = () => {\n        return (\n        <div className=\"text-center\">\n            <h1 className=\"text-[#8582d9]  w-full text-center\">Welcome to Soap Opera! </h1>\n            <p className=\"text-center  \" >Don't take too long in the shower! With Soap Opera you pick the playlist and we pick the best songs to limit your water waste</p>\n            <a  className = \"text-center\" href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`}>Login to Spotify</a>\n        </div>)\n    }\n\n    // displays logout button if logged in\n    const LoggedIn = () => {\n        return (\n        <div className=\"\">\n            <h1 className=\"text-[#8582d9]  text-center\">Soap Opera </h1>\n            <button className = \"\" onClick={logout}>Logout</button>\n        </div>)\n    }\n\n    //Shows playlists and waits for user to click on one\n    const SelectPlaylist = () => {\n        return (\n            <div className=\"text-center\">\n                <h1>Select a Spotify Playlist</h1>\n                <h2>My Playlists:</h2>\n                <div className=\"playlists-grid\">{renderPlaylists()}</div>\n                {selectedPlaylist && (\n                <div>\n                    <h2>{selectedPlaylist.name} Tracks:</h2>\n                    {isModalOpen && (\n                    <div\n                        className=\"fixed inset-0 flex items-center justify-center z-50\"\n                        style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}>\n                        <div className=\"bg-white p-6 rounded-md max-h-full overflow-y-auto\">\n                            <button \n                                onClick={closeModal} \n                                className=\"float-right\">X</button>\n                            <h2 className=\"text-xl mb-4\">{selectedPlaylist && selectedPlaylist.name} Tracks:</h2>\n                        <div>{renderPlaylistTracks()}</div>\n                        </div>\n                    </div>)}\n                </div>)}\n            </div>)\n    }\n\n    console.log(code)\nreturn (\n    <div className=\"bg-white\">\n        <body className=\"App-header\">\n            {!token ? <Login/> : LoggedIn()}\n            {token ?\n                SelectPlaylist() \n                \n            : <h2></h2>}\n        </body>\n        <SpotifyPlayer accessToken={token} trackUri=\"7ixxyJJJKZdo8bsdWwkaB6?si=3ad2af5705394355\"/>\n\n        \n\n    </div>\n);\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}