{"ast":null,"code":"var _jsxFileName = \"/Users/devin/Code/soapopera/src/SpotifyPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RickRollPlayer = _ref => {\n  _s();\n  let {\n    accessToken,\n    trackUri\n  } = _ref;\n  con;\n  useEffect(() => {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'Web Playback SDK Quick Start Player',\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        volume: 0.5\n      });\n      player.addListener('ready', _ref2 => {\n        let {\n          device_id\n        } = _ref2;\n        console.log('Ready with Device ID', device_id);\n      });\n      player.addListener('not_ready', _ref3 => {\n        let {\n          device_id\n        } = _ref3;\n        console.log('Device ID has gone offline', device_id);\n      });\n      player.addListener('initialization_error', _ref4 => {\n        let {\n          message\n        } = _ref4;\n        console.error(message);\n      });\n      player.addListener('authentication_error', _ref5 => {\n        let {\n          message\n        } = _ref5;\n        console.error(message);\n      });\n      player.addListener('account_error', _ref6 => {\n        let {\n          message\n        } = _ref6;\n        console.error(message);\n      });\n      player.connect().then(success => {\n        if (success) {\n          console.log('The Web Playback SDK successfully connected to Spotify!');\n        }\n      });\n      document.getElementById('togglePlay').onclick = function () {\n        player.togglePlay().then(() => {\n          console.log('Toggled playback!');\n        }).catch(error => {\n          console.error('Failed to toggle playback!', error);\n        });\n      };\n      const playRickRoll = () => {\n        player.play({\n          uris: [trackUri]\n        }).then(() => {\n          console.log('Playing Rick Roll!');\n        }).catch(error => {\n          console.error('Failed to play Rick Roll!', error);\n        });\n      };\n      playRickRoll();\n    };\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Web Playback SDK Quick Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"togglePlay\",\n      children: \"Toggle Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(RickRollPlayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RickRollPlayer;\nexport default RickRollPlayer;\nvar _c;\n$RefreshReg$(_c, \"RickRollPlayer\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","RickRollPlayer","_ref","_s","accessToken","trackUri","con","window","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","name","getOAuthToken","cb","volume","addListener","_ref2","device_id","console","log","_ref3","_ref4","message","error","_ref5","_ref6","connect","then","success","document","getElementById","onclick","togglePlay","catch","playRickRoll","play","uris","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/devin/Code/soapopera/src/SpotifyPlayer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst RickRollPlayer = ({ accessToken, trackUri }) => {\n  con\n  useEffect(() => {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: 'Web Playback SDK Quick Start Player',\n        getOAuthToken: cb => { cb(accessToken); },\n        volume: 0.5\n      });\n\n      player.addListener('ready', ({ device_id }) => {\n        console.log('Ready with Device ID', device_id);\n      });\n\n      player.addListener('not_ready', ({ device_id }) => {\n        console.log('Device ID has gone offline', device_id);\n      });\n\n      player.addListener('initialization_error', ({ message }) => {\n          console.error(message);\n      });\n\n      player.addListener('authentication_error', ({ message }) => {\n          console.error(message);\n      });\n\n      player.addListener('account_error', ({ message }) => {\n          console.error(message);\n      });\n\n      player.connect().then(success => {\n        if (success) {\n          console.log('The Web Playback SDK successfully connected to Spotify!');\n        }\n      });\n\n      document.getElementById('togglePlay').onclick = function() {\n        player.togglePlay().then(() => {\n          console.log('Toggled playback!');\n        }).catch(error => {\n          console.error('Failed to toggle playback!', error);\n        });\n      };\n\n      const playRickRoll = () => {\n        player.play({ uris: [trackUri] }).then(() => {\n          console.log('Playing Rick Roll!');\n        }).catch(error => {\n          console.error('Failed to play Rick Roll!', error);\n        });\n      };\n\n      playRickRoll();\n\n    };\n  }, [accessToken]);\n\n  return (\n    <div>\n      <h1>Spotify Web Playback SDK Quick Start</h1>\n      <button id=\"togglePlay\">Toggle Play</button>\n    </div>\n  );\n};\n\nexport default RickRollPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}